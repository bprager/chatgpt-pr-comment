name: PR Code Review Bot Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  diff-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Base
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}
          path: base

      - name: Checkout Head
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          path: head

      - name: Get PR Diff
        id: diff
        run: |
          cd base
          git fetch origin ${{ github.head_ref }}
          FILES=$(git diff --name-only ${{ github.base_ref }} FETCH_HEAD)
          echo "::set-output name=files::$FILES"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v4
        with:
          path: head/requirements.txt
          update-pip: "false"
          update-setuptools: "false"
          update-wheel: "false"

      - name: Process Files and Comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // only following file extensions are processed
            const languages = { 'py': 'Python', 'java': 'Java', 'js': 'JavaScript', 'cpp': 'C++' };
            const fs = require('fs');
            const { execSync } = require('child_process');
            const files = '${{ steps.diff.outputs.files }}'.split('\n');
            console.log('*** files: ' + `${files}`);
            for (const file of files) {
                const headExist = fs.existsSync(`head/${file}`) ? true : false;
                console.log('*** ' + `${file}` + ' exist in head is: ' + `${headExist}`)
                const baseExist = fs.existsSync(`base/${file}`) ? true : false;
                console.log('*** ' + `${file}` + ' exist in base is: ' + `${baseExist}`)
                if (fs.existsSync(`head/${file}`)) {  // check if file exists in head
                    console.log('*** processing file ' + `${file}` + '.');
                    const fileModified = (fs.existsSync(`base/${file}`)) ? true : false // check if file is new
                    const fileExtension = file.split('.').pop();  // get file extension 
                    if (languages.hasOwnProperty(fileExtension)) { // check if source code
                        language = languages[fileExtension]
                        const headContent = fs.existsSync(`head/${file}`) ? fs.readFileSync(`head/${file}`, 'utf8') : '';
                        if (fileModified == true) {
                            const baseContent = fs.existsSync(`base/${file}`) ? fs.readFileSync(`base/${file}`, 'utf8') : '';
                            const diff = execSync(`diff -u base/${file} head/${file}`, { encoding: 'utf8' });
                            const pwd = execSync(`pwd`)
                            console.log('*** pwd: ' + `${pwd}`);
                            const ls = execSync(`ls`)
                            console.log('*** ls: ' + `${ls}`);

                            const result = execSync(`python3 chatgpt_agent.py MODIFIED '${baseContent}' '${diff}' '${language}'`, { encoding: 'utf8' });
                        } else { // file added
                            const result = execSync(`python3 chatgpt_agent.py ADDED '${headContent}' '' '${language}'`, { encoding: 'utf8' });
                        }
                        github.issues.createComment({
                            issue_number: context.issue.number,
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            body: `Results for ${file}:\n\n${result}`
                        });
                        console.log('*** comments for ' + `${file}` + ' created.');
                    }
                } else {
                    console.log('*** no comments for ' + `${file}` + ' created.');
                }
            }
