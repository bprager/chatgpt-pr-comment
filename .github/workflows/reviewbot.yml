name: PR Diff Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  diff-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Base
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}
          path: base

      - name: Checkout Head
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          path: head

      - name: Get PR Diff
        id: diff
        run: |
          cd base
          git fetch origin ${{ github.head_ref }}
          FILES=$(git diff --name-only ${{ github.base_ref }} FETCH_HEAD)
          echo "::set-output name=files::$FILES"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v4
        with:
          path: head/requirements.txt
          update-pip: "false"
          update-setuptools: "false"
          update-wheel: "false"

      - name: Process Files and Comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // only following file extensions are processed
            const languages = {'py': 'Python', 'java': 'Java', 'js': 'JavaScript', 'cpp': 'C++'};
            const fs = require('fs');
            const { execSync } = require('child_process');
            const files = '${{ steps.diff.outputs.files }}'.split('\n');
            for (const file of files) {
              const fileExtension = file.split('.').pop();  // get file extension 
              if (!languages.hasOwnProperty(fileExtension)):
                continue
              language = languages[fileExtension]
              const baseContent = fs.existsSync(`base/${file}`) ? fs.readFileSync(`base/${file}`, 'utf8') : '';
              const headContent = fs.existsSync(`head/${file}`) ? fs.readFileSync(`head/${file}`, 'utf8') : '';
              const diff = execSync(`diff -u base/${file} head/${file}`, { encoding: 'utf8' });
              const result = execSync(`python3 chatgpt_agent.py '${baseContent}' '${diff}' '${language}'`, { encoding: 'utf8' });
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `Results for ${file}:\n\n${result}`
              });
            }
